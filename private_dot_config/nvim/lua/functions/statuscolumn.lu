-- The 0 is the namespace which is the default namespace
-- MyHighlight is the group name
-- fg, bg are foreground & background
vim.api.nvim_set_hl(0, "MyHighlight", {
  -- Check the `nvim_set_hl()` help file to see all the available options
  fg = "#FFFFFF",
  bg = "#1E1E2E",
})
local statuscolumn = {}

statuscolumn.border = function()
  -- NOTE: lua tables start at 1 but relnum starts at 0, so we add 1 to it to get the highlight group
  if vim.v.relnum < 9 then
    return "%#Gradient_" .. (vim.v.lnum + 1) .. "#│"
  else
    return "%#Gradient_10#│"
  end
end

statuscolumn.setHl = function()
  local colors =
    { "#caa6f7", "#c1a6f1", "#b9a5ea", "#b1a4e4", "#aba3dc", "#a5a2d4", "#9fa0cc", "#9b9ec4", "#979cbc", "#949ab3" }

  for i, color in ipairs(colors) do
    vim.api.nvim_set_hl(0, "Gradient_" .. i, { fg = color })
  end
end

statuscolumn.myStatuscolumn = function()
  local text = ""

  -- The name should be unique so that it doesn't overwrite one of the default highlight group
  vim.api.nvim_set_hl(0, "StatusBorder", {
    fg = "#CBA6F7",
  })

  text = table.concat({
    statuscolumn.border(),
  })

  return text
end

statuscolumn.number = function(user_config)
  local text = ""

  local config = vim.tbl_extend("keep", user_config or {}, {
    colors = nil,
    mode = "normal",
  })

  -- islist() was previously called tbl_islist() so use that if you are using an older version
  if config.colors ~= nil and vim.islist(config.colors) == true then
    for rel_numb, in hl ipairs(config.colors) do
      -- Only 1 highlight group
      if (vim.v.relnum + 1) == rel_num then
        text = "%#" .. colors .. "#";
        break;
      end
    end

     -- If the string is still empty then use the last color
     if text == "" then
       text = "%#" .. config.colors[#config.colors] .. "#";
     end
   end

   if config.mode == "normal" then
     text = text .. vim.v.lnum;
   elseif config.mode == "relative" then
     text = text .. vim.v.relnum;
   elseif config.mode == "hybrid" then
     return vim.v.relnum == 0 and text .. vim.v.lnum or text .. vim.v.relnum;
   end

   return text;
end

return statuscolumn
