-- vim.o.sessionoptions = "blank,buffers,curdir,folds,help,tabpages,winsize,winpos,terminal,localoptions"
-- return {
--
--   "rmagatti/auto-session",
--   config = function()
--     local function get_cwd_as_name()
--       local dir = vim.fn.getcwd(0)
--       return dir:gsub("[^A-Za-z0-9]", "_")
--     end
--     local overseer = require("overseer")
--     require("auto-session").setup({
--       log_level = "error",
--       auto_session_suppress_dirs = { "~/", "~/Projects", "~/Downloads", "/" },
--       auto_session_enable_last_session = vim.loop.cwd() == vim.loop.os_homedir(),
--
--       session_lens = {
--         -- If load_on_setup is set to false, one needs to eventually call `require("auto-session").setup_session_lens()` if they want to use session-lens.
--         buftypes_to_ignore = {}, -- list of buffer types what should not be deleted from current session
--         load_on_setup = true,
--         theme_conf = { border = true },
--         previewer = false,
--       },
--       pre_save_cmds = {
--         function()
--           overseer.save_task_bundle(
--             get_cwd_as_name(),
--             -- Passing nil will use config.opts.save_task_opts. You can call list_tasks() explicitly and
--             -- pass in the results if you want to save specific tasks.
--             nil,
--             { on_conflict = "overwrite" } -- Overwrite existing bundle, if any
--           )
--         end,
--       },
--       -- Optionally get rid of all previous tasks when restoring a session
--       pre_restore_cmds = {
--         function()
--           for _, task in ipairs(overseer.list_tasks({})) do
--             task:dispose(true)
--           end
--         end,
--       },
--       post_restore_cmds = {
--         function()
--           overseer.load_task_bundle(get_cwd_as_name(), { ignore_missing = true })
--         end,
--       },
--     })
--     vim.keymap.set("n", "<C-s>", require("auto-session.session-lens").search_session, {
--       noremap = true,
--     })
--   end,
-- }
