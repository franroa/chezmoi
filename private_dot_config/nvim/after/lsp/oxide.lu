-- An example nvim-lspconfig capabilities setting
local capabilities = require("cmp_nvim_lsp").default_capabilities(vim.lsp.protocol.make_client_capabilities())

return {
  name = "markdown-oxide",
  filetypes = {
    "markdown",
  },
  cmd = "markdown_oxide",
  capabilities = vim.tbl_deep_extend("force", capabilities, {
    workspace = {
      didChangeWatchedFiles = {
        dynamicRegistration = true,
      },
    },
  }),
  -- on_attach = on_attach, -- configure your on attach config
}
-- local capabilities = require("cmp_nvim_lsp").default_capabilities(vim.lsp.protocol.make_client_capabilities())
--
-- require("lspconfig").markdown_oxide.setup({
--     -- Ensure that dynamicRegistration is enabled! This allows the LS to take into account actions like the
--     -- Create Unresolved File code action, resolving completions for unindexed code blocks, ...
--     capabilities = vim.tbl_deep_extend(
--         'force',
--         capabilities,
--         {
--             workspace = {
--                 didChangeWatchedFiles = {
--                     dynamicRegistration = true,
--                 },
--             },
--         }
--     ),
--     on_attach = on_attach -- configure your on attach config
-- })
